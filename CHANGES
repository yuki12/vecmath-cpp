HISTOR OF CHANGES:

* 1.2-1.5

** Matrix[34].h use VM_IOSTREAM_STD::endl instead of endl in toString() methods.
  (Thanks > "SyrusM ." <syrusm@hotmail.com>)

* 1.2-1.4

** added operator=  for Tuples.
  (Thanks > Katsuaki KAWACHI <kawachi@cim.pe.u-tokyo.ac.jp>)

** added '/D "TESTALL" /I "." ' to vecmath.dsp
  (Thanks > Takayuki MATSUOKA <matsuoka@osaka.whoopeecamp.co.jp>)

* 1.2-1.3

** This 1.2-1.3 version newly places 'kh_vecmath' namespace around
the all vecmath classes. Users upgrading from earlier versions,
there are 2 options.
   (1) Insert 'using namespace kh_vecmath;' into your code.
   (2) undef VM_INCLUDE_NAMESPACE in vm_conf.h to turn off
       the namespace feature. You don't have to change your code.

** For Visual Studio users, vecmath.dsw (Workspace) is provided
for testing. vecmath.dsp (Project) is a project to create a
vecmath testing excutable. You don't have to build this project
unless you need testing.

** Java3D 1.2 conformance

  Vector4#Vector4(Tuple3)
  Vector4#set3(Tuple3)

  Point4#Point4(Tuple3)
  Point4#set3(Tuple3)
  AxisAngle4#AxisAngle4(Vector3,T)
  AxisAngle4#set(Vector3,T)

** Makefile.unix adjust ($$i -> ./$$i)
   thanks > matsuoka@osaka.whoopeecamp.co.jp

** Point{2,3}.h distance*() method to const
   thanks > okamura@esm.co.jp

** removed static helper method like max,min,abs from Tuple classes

** test sources .cc -> .cpp

** added more tests.

** Visual Studio Workspace and Project support.

* 1.1-1.2

** VM_INCLUDE_STRING -> VM_INCLUDE_TOSTRING in Tuple{3,4}.h
   thanks > kawachi@cim.pe.u-tokyo.ac.jp

** SVD normalization is now done per axis in Matrix{3,4}d.h

* 1.1-1.1

** Adaptation to Microsoft Visual C/C++ 6.0 compiler
   (Thanks > "Lucas Ammon" <lammon@iam.unibe.ch>)

* 1.1-1.0

** first release of vecmath-c++(1999,3/4)
